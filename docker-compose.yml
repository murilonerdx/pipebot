
services:
  pipebot-app:
    image: murilonerdx/pipebot:latest
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8081
      MONGO_HOST: mongo-app
      MONGO_PORT: 27017
      MONGO_DB: pipebotdb
      MONGO_USER: user
      MONGO_PASSWORD: password
      CORS_DEV: http://localhost:8888
      CORS_PRD: http://localhost:8888   # Nome do servi√ßo frontend e porta interna
      DOCKER_HOST: unix:///var/run/docker.sock
    depends_on:
      - mongo-app
      - prometheus
      - jaeger
      - grafana
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - services

  mongo-app:
    image: mongo:6.0
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_DATABASE: pipebotdb
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - services

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - services

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: changeme
    depends_on:
      - prometheus
    networks:
      - services

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14250:14250"
      - "6831:6831/udp"
    networks:
      - services

  frontend:
    image: murilonerdx/pipebot-app:latest
    ports:
      - "8888:88"  # Porta externa:interna
    environment:
      NODE_ENV: production
    networks:
      - services
networks:
  services:
    driver: bridge
